-- DROP TABLE PUBLISHER;
-- Create PUBLISHER Table
CREATE TABLE PUBLISHER
(
    PUBLISHER_ID VARCHAR2(20) PRIMARY KEY,
    NAME         VARCHAR2(100),
    IMAGE        VARCHAR2(100),
    CITY         VARCHAR2(100),
    COUNTRY      VARCHAR2(100),
    POSTAL_CODE  VARCHAR2(100),
    EMAIL_ID     VARCHAR2(20) NOT NULL,
    CONTACT_NO   VARCHAR2(20)
);
-- DROP TABLE AUTHOR;
-- Create AUTHOR Table
CREATE TABLE AUTHOR
(
    AUTHOR_ID   VARCHAR2(20) PRIMARY KEY,
    FIRST_NAME  VARCHAR2(20) NOT NULL,
    LAST_NAME   VARCHAR2(20) NOT NULL,
    DoB         DATE NOT NULL,
    DoD         DATE,
    NATIONALITY VARCHAR2(20) NOT NULL,
    BIO         VARCHAR2(2000)
);
-- DROP TABLE BOOK;
-- Create BOOK Table
CREATE TABLE BOOK
(
    ISBN            VARCHAR2(100) PRIMARY KEY,
    TITLE           VARCHAR2(100) NOT NULL,
    IMAGE           VARCHAR2(100),
    NUMBER_OF_PAGES NUMBER NOT NULL,
    LANGUAGE        VARCHAR2(10),
    DESCRIPTION     VARCHAR2(2000),
    PUBLISHER_ID    VARCHAR2(20),
    FOREIGN KEY (PUBLISHER_ID) REFERENCES PUBLISHER (PUBLISHER_ID)
);
-- DROP TABLE EDITION;
-- Create EDITION Table
CREATE TABLE EDITION
(
    EDITION_ID    VARCHAR2(20) PRIMARY KEY,
    ISBN          VARCHAR2(100) NOT NULL,
    EDITION_NUM   NUMBER NOT NULL,
    NUM_OF_COPIES NUMBER NOT NULL,
    UNIQUE (ISBN, EDITION_NUM),
    FOREIGN KEY (ISBN) REFERENCES BOOK (ISBN)
);
-- DROP TABLE "USER";
-- Create USER Table
CREATE TABLE "USER"
(
    USER_ID    VARCHAR2(20) PRIMARY KEY,
    FIRST_NAME VARCHAR2(20) NOT NULL,
    LAST_NAME  VARCHAR2(20) NOT NULL,
    ADDRESS    VARCHAR2(100),
    EMAIL      VARCHAR2(100) NOT NULL,
    PASSWORD   VARCHAR2(200) NOT NULL,
    CONTACT_NO VARCHAR2(20),
    GENDER     CHAR
);
-- DROP TABLE REQUEST;
-- Create REQUEST Table
CREATE TABLE REQUEST
(
    USER_ID    VARCHAR2(20) NOT NULL,
    EDITION_ID VARCHAR2(20) NOT NULL,
    COUNT      NUMBER NOT NULL,
    PRIMARY KEY (USER_ID, EDITION_ID),
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID),
    FOREIGN KEY (EDITION_ID) REFERENCES EDITION (EDITION_ID)
);
-- DROP TABLE WRITTEN_BY;
-- Create WRITTEN_BY Table
CREATE TABLE WRITTEN_BY
(
    ISBN      VARCHAR2(100) NOT NULL,
    AUTHOR_ID VARCHAR2(20) NOT NULL,
    PRIMARY KEY (ISBN, AUTHOR_ID),
    FOREIGN KEY (ISBN) REFERENCES BOOK (ISBN),
    FOREIGN KEY (AUTHOR_ID) REFERENCES AUTHOR (AUTHOR_ID)
);
-- DROP TABLE GENRE;
-- Create GENRE Table
CREATE TABLE GENRE
(
    GENRE_ID   VARCHAR2(20) PRIMARY KEY,
    GENRE_NAME VARCHAR2(100) NOT NULL
);
-- DROP TABLE BOOK_GENRE;
-- Create BOOK_GENRE Table
CREATE TABLE BOOK_GENRE
(
    ISBN     VARCHAR2(100) NOT NULL,
    GENRE_ID VARCHAR2(20),
    PRIMARY KEY (ISBN, GENRE_ID),
    FOREIGN KEY (ISBN) REFERENCES BOOK (ISBN),
    FOREIGN KEY (GENRE_ID) REFERENCES GENRE (GENRE_ID)
);
-- DROP TABLE ADMIN;
-- Create ADMIN Table
CREATE TABLE ADMIN
(
    USER_ID      VARCHAR2(20) PRIMARY KEY,
    SECURITY_KEY VARCHAR2(20) NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID)
);
-- DROP TABLE FAVOURITE;
-- Create FAVOURITE Table
CREATE TABLE FAVOURITE
(
    USER_ID VARCHAR2(20) NOT NULL,
    ISBN    VARCHAR2(100) NOT NULL,
    PRIMARY KEY (USER_ID, ISBN),
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID),
    FOREIGN KEY (ISBN) REFERENCES BOOK (ISBN)
);
-- DROP TABLE RATING;
-- Create RATING Table
CREATE TABLE RATING
(
    ISBN    VARCHAR2(100) NOT NULL,
    USER_ID VARCHAR2(20) NOT NULL,
    RATING  NUMBER(1),
    PRIMARY KEY (ISBN, USER_ID),
    FOREIGN KEY (ISBN) REFERENCES BOOK (ISBN),
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID)
);
-- DROP TABLE REVIEW;
-- Create REVIEW Table
CREATE TABLE REVIEW
(
    ISBN    VARCHAR2(100) NOT NULL,
    USER_ID VARCHAR2(20) NOT NULL,
    CONTENT VARCHAR2(2000),
    PRIMARY KEY (ISBN, USER_ID),
    FOREIGN KEY (ISBN) REFERENCES BOOK (ISBN),
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID)
);
-- DROP TABLE JOB;
-- Create JOB Table
CREATE TABLE JOB
(
    JOB_ID    VARCHAR2(20) NOT NULL,
    SALARY    NUMBER NOT NULL,
    JOB_TITLE VARCHAR2(100) NOT NULL,
    PRIMARY KEY (JOB_ID)
);
-- DROP TABLE EMPLOYEE;
-- Create EMPLOYEE Table
CREATE TABLE EMPLOYEE
(
    USER_ID   VARCHAR2(20) NOT NULL,
    JOB_ID    VARCHAR2(20) NOT NULL,
    JOIN_DATE DATE NOT NULL,
    END_DATE  DATE,
    PRIMARY KEY (USER_ID, JOB_ID),
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID),
    FOREIGN KEY (JOB_ID) REFERENCES JOB (JOB_ID)
);
-- DROP TABLE APPLY;
-- Create APPLY Table
CREATE TABLE APPLY
(
    USER_ID VARCHAR2(20) NOT NULL,
    JOB_ID  VARCHAR2(20) NOT NULL,
    PRIMARY KEY (USER_ID, JOB_ID),
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID),
    FOREIGN KEY (JOB_ID) REFERENCES JOB (JOB_ID)
);
-- DROP TABLE RENT_HISTORY;
-- Create RENT_HISTORY Table
CREATE TABLE RENT_HISTORY
(
    RENT_HISTORY_ID VARCHAR2(20) NOT NULL,
    RENT_DATE       DATE NOT NULL,
    RETURN_DATE     DATE,
    USER_ID         VARCHAR2(20) NOT NULL,
    EDITION_ID      VARCHAR2(20) NOT NULL,
    PRIMARY KEY (RENT_HISTORY_ID),
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID),
    FOREIGN KEY (EDITION_ID) REFERENCES EDITION (EDITION_ID)
);
-- DROP TABLE FINR_HISTORY;
-- Create FINE_HISTORY Table
CREATE TABLE FINE_HISTORY
(
    RENT_HISTORY_ID VARCHAR2(20) NOT NULL,
    FEE_AMOUNT      NUMBER NOT NULL,
    START_DATE      DATE   NOT NULL,
    PAYMENT_DATE    DATE,
    PRIMARY KEY (RENT_HISTORY_ID),
    FOREIGN KEY (RENT_HISTORY_ID) REFERENCES RENT_HISTORY (RENT_HISTORY_ID)
);
-- DROP TABLE NEWS;
-- Create NEWS Table
CREATE TABLE NEWS
(
    NEWS_ID   VARCHAR2(20) NOT NULL,
    NEWS_TEXT VARCHAR2(2000),
    NEWS_DATE DATE NOT NULL,
    PRIMARY KEY (NEWS_ID)
);
-- DROP TABLE MESSAGE;
-- Create MESSAGE Table
CREATE TABLE MESSAGE
(
    MESSAGE_ID   VARCHAR2(20) NOT NULL,
    USER_ID      VARCHAR2(20) NOT NULL,
    MESSAGE_DATE DATE NOT NULL,
    MESSAGE      VARCHAR2(2000),
    PRIMARY KEY (MESSAGE_ID),
    FOREIGN KEY (USER_ID) REFERENCES "USER" (USER_ID)
);
